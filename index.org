#+title:My book list
本の読み方をここに書く．
ざっと見る
キーワードにあたりをつける
* New Programmer's Survival Manual
** Part I -- Professional Programming
*** Program for Production
**** Tip 1. Beat Up Your Code
チェックの重要性
**** Tip 2. Insist on Correctness
正確に
*** Get Your Tools in Order
** Part II -- People Skills
*** Manage Thy Self
*** Teamwork
** Part III -- The Corporate World
*** Inside the Company
*** Mind Your Business
** Part IV -- Looking Forward
* いっきに学び直す日本史
** 古代・中世・近世【教養編】
** 近代・現代【実用編】
* 詳説日本史研究
* 詳説世界史研究
* EVOLUTION
* 弓道読本
* 弓道教室講話
* サピエンス全史
* ストレスフリーの整理術
* 弓聖 阿波研造
* 生命とは何か
* インタースコア
* 身体の歴史
* graphic elements
* カラー & ライト
* [[/Users/ahayashi/Documents/GitHub/books/land_of_lisp.org][Land of lisp]]
* プログラミング作法
* 起源図鑑
* 人類はどこから来て，どこへ行くのか
* ルネサンスの教育
* 世界十五大哲学
* 論語
** 
* 寄生虫なき病
* 禅と生命科学
* 東洋的な見方
* 禅と日本文化
* 意識と脳
* 漁師革命
* NATURAL BORN HERO
* 人体観の歴史
* スモールワールド
* フィレンツェの世紀
* 内なる創造性を引き出せ
* オートポイエーシス
* 人体解剖図
* 勘の研究
* 世界のエリートはなぜ「美意識」を鍛えるのか？
* 無門関
* スタンフォードの自分を変える教室
* 剣の精神史
* 夢判断
* モーセと一神教
* 南方マンダラ
* デザイン思考が世界を変える
* 孫子
* 無心ということ
* 弓と禅
* 非線形ダイナミクスとカオス
:PROPERTIES:
:START_READING: [2018-11-21 Wed]
:END:
** 本書のあらまし
*** カオス，フラクタル，ダイナミクス
*** ダイナミクスの研究小史
*** 非線形であることの重要性
*** 動力学的世界観
** 直線上の流れ
*** はじめに
*** 幾何学的な考察法
*** 固定点とその安定性
*** 個体数の増加
ロジスティック曲線も，図を用いてその性質を考察するとわかりやすい．
**** ロジスティックモデルの批評
実際の生物の個体数が理論通りの曲線を描くには，
- 一定の気候
- 食物の供給あり
- 捕食者なし
の条件が必要．
酵母やバクテリアなど，単純な生活サイクルの生物なら，実験で成り立つ．
ただし，ハエなどの，複雑なライフサイクルを持つ生物では成り立たなかった．
ゆらぎが見られた．
このゆらぎを生み出す可能性のある原因についての議論はKrebs(1972)参照．
本文には，集団生物学についての教科書が紹介されている(p.27)．

* MIND HACKS
* 論文を書くための科学の手順
長崎市立図書館より貸借．
[2018-12-10 Mon]陽光丸第10次航海にて読了．
仮説演繹の流れに乗って研究することの大切さがわかった．
この本，買うか？買わないな．ベストセラーにもならないと思う．
** 基礎編
*** 第1章 科学とは何か？
- 知識を生み出す過程
- この過程で作られた「体系的知識」
*** 第2章 どうやって科学する？
仮説演繹を使え！
なぜか？
- 演繹だけでは，新たな知見は生まれないから．
- 帰納だけでは，正しさに問題があるから．
そこで仮説演繹．
コレラの感染経路解明に対するスノウのアプローチ
- 仮説: コレラは飲料水に広がる危険因子を摂取することで感染する
- 予言: コレラの危険因子に汚染された水源を封鎖することで，コレラの流行を止められる
- 実証: コレラの発生源として最も疑わしい井戸を封鎖する
- 実験の結果: コレラの蔓延が止まった
- 結論: 「コレラは飲料水に広がる危険因子を摂取することで感染する」説は，少なくとも間違っているとは言えない．

予言の実証に必要な実験・観察・工夫
- 再現性，反復性
- デュプリケート
- 客観性と定量性
- 統計学
** 応用編
*** 第3章 生物学は科学なのか？
生物学は，進化を考えないといけないところが，他の学問と異なる．
進化，つまり自然選択は，ランダムではない形質変化．

自分の学問が，
- 至近要因（どのように起こるのか，そうなるしくみ）
- 究極要因（なぜそのようになっているのか，そうなった背景）
どちらのアプローチをとっているのかは，意識しておく必要がある．ただし，研究を進める上では両方の視点が必要．
*** 第4章 進化はどうして科学と言える？
ダーウィンの進化論は，実は仮説演繹ではなく，仮説形成だ．
仮説形成は不完全だが，実験確かめることかできない事象に立ち向かうときに有効．

科学とは何か？「反証可能性」があるもの．
実はマルクス主義やフロイト理論は，この観点から科学ではないと言われている．

「適者生存」というトートロジーを含んでいることが，進化のしくみ仮説の論理的な瑕疵（かし）．

勝者は自然選択だけではなく，偶然によっても決まる，という木村資生の説（実験によって実証済み）があることは，知っておく必要がある．
** 発展編
*** 第5章 仮説はどこからやってくる？
- 帰納から作られる
- ひらめきや偶然
- どこかから借りてくる

*** 第6章 「適応しているから」という説明でいい？
適応主義に陥らないように注意．
でっち上げは簡単で，周りも信じやすい．
だったとさ物語と何ら変わらない．

適応主義の欠点
- スパンドレル
- 実証の難しさ

**** スパンドレル
スパンドレルには4大河をモチーフとした素晴らしい装飾があるが，装飾のためのものではない．
4つの回廊をアーチでつなげたときに，勝手にできた．そこに，あとから装飾を加えただけだ．

適応という言葉の使い方にも注意．その器官は単なる<<外適当>>（exaptation）のかもしれないから．
例えば，ジャイアントパンダの親指．

**** 実証の難しさ

*** 第7章 何をどこまで示せば「わかった」と言える？

**** しくみまでわかる必要はない．メタ分析
「熱帯では，大きい木のグループのほうが，小さい木のグループよりも種多様性が高い」という研究．
この研究は，現象の有無を明らかにしたに過ぎない．これでも研究として成り立っている．

**** じゃぁどうすればいいのか？
仮説演繹の予言の真偽を示せば，わかったと言える．
*** 第8章 実践！仮説演繹をやってみよう！
* プロダクティブ・プログラマ--プログラマのための生産性向上術
*** 第1章　はじめに
** 第I部　技法編
*** 第2章　加速--Acceleration
- ランチャを使え
- クリップボード履歴を使え
*** 第3章　集中--Focus
- 不要な通知を切れ
- 仮想デスクトップを使え
  - コード，コミュニケーション，ドキュメント
*** 第4章　自動化--Automation
**** 有用なWebページをローカルへキャッシュできる
よく参照するサイトを航海中にも見れる？
#+BEGIN_SRC sh
wget --mirror --html-extension --convert-links [URL] -P [destination]
#+END_SRC
**** Webサイトとのやり取りを自動化する
cURL, Seleniumを使う
裁量労働の自動化に使えないか？
**** 自動化すべきか否かの検討
投資に対するリターンや，自動化すること，しないことのリスクを考慮して決める
*** 第5章　正準化--Canonicality
自分の環境では動いていたのに，は言い訳にならない．
**** DRYなバージョン管理
ビルドに必要なバイナリも，とっておかないといけない．
ただし，バイナリをバージョン管理しようとすると，負担が増えるかもしれない．
対策は2つ．
- バージョン管理システムの，外部参照機能を使う
- バイナリを１つのネットワークドライブにまとめ，複数のプロジェクトから参照する（バージョン管理はしない）
**** ビルドマシンの正準化
皆のビルド環境を同じにする
資源評価TeXでも重要な考え方．
**** DRYなドキュメント
***** SVN2Wiki
コードが更新されると，自動的に変更をドキュメント化したWikiを生成．
Gitにも同じものは無いだろうか？
** 第II部　実践編
*** 第6章　テスト駆動設計--Test-Driven Design
*** 第7章　静的解析--Static Analysis
*** 第8章　オブジェクトを「良き市民」に--Good Citizenship
*** 第9章　YAGNI
*** 第10章　古代の哲学者の教え
*** 第11章　権威を疑う
*** 第12章　メタプログラミング
*** 第13章　Composed MethodパターンとSLAP
*** 第14章　多言語プログラミング--Polyglot Programming
*** 第15章　理想のツールを探す--Find the Perfect Tools
*** 第16章　まとめ
* [[/Users/ahayashi/Documents/GitHub/study/Unix/Unix_for_OSX.org][入門Unix for OSX]]
* エンジニアの知的生産術
** 新しいことを学ぶには
** やる気を出すには
** 記憶を鍛えるには
** 効率的に読むには
** 考えをまとめるには
** アイデアを思いつくには
** 何を学ぶかを決めるには
* ハッカーと画家
** はじめに
コンピュータの世界で起こっていることを，世界に向けて説明しようとする本．
** 日本語版への序文
ハッカーの行動は，「米国的」とされる行動の極端な例．
日本人にとっては，米国文化を理解することにもつながると思う．
** メイド・イン・USA
なぜアメリカの映画やソフトウェアは優れているにに，車や都市などの人工物は醜いのか．
アメリカ人のJust Do Itの精神が，前者にはよくマッチするが，後者には合わないから．

プログラムは，プロトタイプを素早くつくり，それから新しいアイデアを得るほうがいい．
映画やソフトウェアは，軟らかいメディアだから，大胆さが報われる．
アメリカ人は，デザインやセンスに対して無頓着．

日本人は，ものをうまく作ることに囚われている民族．
昔から，精微なものを作ってきた．

アメリカ人は，まず動くものを作り，そのまま使っていくか，それとも機能をゴテゴテ付け足してしていくか，どちらか．

一般の消費者が欲しがるものは，結局は憧れた誰かのマネ．
優れたデザインを生み出せるのは，優れたデザイナーだけ．

- とにかくやる
- 注意深く進める
両立できないだろうか？
アップルがいい例．米国製にしてはうまく出来すぎている．

将来，最も成功するのは，これまでの「お国柄」を捨てて，それぞれの事柄について最も有効に働く方法を採っていく国だろう．


** どうしてオタクはもてないか
** ハッカーと画家
** 口にできないこと
** 天邪鬼の価値
** もうひとつの未来への道
** 富の創りかた
** 格差を考える
** スパムへの対策
** ものつくりのセンス
** プログラミング言語入門
** 百年の言語
** 普通のやつらの上を行け
** オタク野郎の復讐
** 夢の言語
** デザインとリサーチ
** 素晴らしきハッカー
* UNIX という考え方
* 情熱プログラマー/ Chad Fowler
** 日本の読者のみなさんへ
著者は日本人のクオーター．
情熱は再生可能なエネルギーだが，再生までに時間がかかることがある．
賢く使わないといけない．
キャリアを見誤らないためには，情熱に従って生きることが重要．
** イントロダクション
仕事は，時間の量的に人生の大半を占める．
好きな仕事につくことが幸福のために重要．
** 市場を選ぶ
開発中の新製品のヒット如何で破産する状況にある企業は，商品の生産前に深く考えるのは容易に創造がつく．
キャリアだって同じ．
商品としての君は，どんなサービスを提供できるか？
そのサービスは何か？それを売り込むべき相手は誰か？
** 製品に投資する
製品とは自分のこと．
鍛錬すれば，ずっと憧れていたテクニックも不可能ではなくなる．
この章では，キャリアアップに役立つ投資戦略について見ていく．
どのスキルや技術を選択すればいいのだろうか？
** 実行に移す
賢くなるために報酬をもらっているわけではない．
価値を生み出すために報酬をもらっているのだ．
仕事を終わらせないといけない．
** マーケティング...スーツ族だけのものじゃない
どんなにすごいことができても，それが他人に知られなければできないのと同じ．
適切に自分を売り込むことは，傲慢でも何でもない．
この章では，市場性を実現するために，
- 上司に自分の能力を理解させる方法
- 業界全体に視野を広げる方法
を学ぶ
** 研鑽を怠らない
一発屋にならないためのプロセスを説明する．
引退するまで何度も繰り返さなければならない．
- 調査
- 投資
- 実践
- 売り込み

** 楽しもう
ソフトウェア開発は，素晴らしい仕事．
想像的だし，芸術と違って数量化できる価値を持っている．
** 参考文献
** 監訳者あとがき
本書は前向きに成長していくための本．決してプログラマーのためだけの本ではない．
